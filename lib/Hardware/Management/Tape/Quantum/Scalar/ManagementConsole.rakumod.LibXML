need    Hypervisor::IBM::POWER::HMC::ETL::XML;
need    Hypervisor::IBM::POWER::HMC::Config;
need    Hypervisor::IBM::POWER::HMC::Config::Analysis;
need    Hypervisor::IBM::POWER::HMC::ManagementConsole::MachineTypeModelAndSerialNumber;
need    Hypervisor::IBM::POWER::HMC::ManagementConsole::MemConfiguration;
need    Hypervisor::IBM::POWER::HMC::ManagementConsole::NetworkInterfaces;
need    Hypervisor::IBM::POWER::HMC::ManagementConsole::ProcConfiguration;
need    Hypervisor::IBM::POWER::HMC::ManagementConsole::VersionInfo;
use     Terminal::ANSIColor;
use     URI;
#use     XML;
use     LibXML;
unit    class Hypervisor::IBM::POWER::HMC::ManagementConsole:api<0.0.1>:auth<Mark Devine (mark@markdevine.com)>:ver<1>
            does Hypervisor::IBM::POWER::HMC::Config::Analysis
            does Hypervisor::IBM::POWER::HMC::ETL::XML;

has     Str                                                                             $.id;
has     Str                                                                             @.AuthorizedKeysValue;
has     Str                                                                             $.BaseVersion;
has     Str                                                                             $.BIOS;
has     Str                                                                             @.IFixDetails;
has     Hypervisor::IBM::POWER::HMC::ManagementConsole::MachineTypeModelAndSerialNumber $.MachineTypeModelAndSerialNumber;
has     URI                                                                             @.ManagedSystems;
has     Str                                                                             $.ManagementConsoleName;
has     Hypervisor::IBM::POWER::HMC::ManagementConsole::MemConfiguration                $.MemConfiguration;
has     Hypervisor::IBM::POWER::HMC::ManagementConsole::NetworkInterfaces               $.NetworkInterfaces;
has     Hypervisor::IBM::POWER::HMC::ManagementConsole::ProcConfiguration               $.ProcConfiguration;
has     Str                                                                             $.PublicSSHKeyValue;
has     Hypervisor::IBM::POWER::HMC::ManagementConsole::VersionInfo                     $.VersionInfo;
has     Hypervisor::IBM::POWER::HMC::Config                                             $.config is required;

method  xml-name-exceptions () { return set (); }

method init () {
    my $start                               = now;
    my $xml-path                            = self.config.session-manager.fetch('/rest/api/uom/ManagementConsole');
    self.config.diag: sprintf("%-20s %10s: %11s", self.^name.subst(/^.+'::'(.+)$/, {$0}), 'FETCH', sprintf("%.3f", now - $start)) if %*ENV<HIPH_FETCH>;
    $start                                  = now;
#   my XML::Document $xml                   = from-xml-file($xml-path);
note $xml-path;
#   my LibXML::Document $xml                = LibXML.parse(:io($xml-path));

my $libxml-manager = LibXML.new;
my $xml = $libxml-manager.parse(:io($xml-path));

#   my $xml                                 = LibXML.new.parse(:io($xml-path));
dd $xml;
    self.config.diag: sprintf("%-20s %10s: %11s", self.^name.subst(/^.+'::'(.+)$/, {$0}), 'PARSE', sprintf("%.3f", now - $start)) if %*ENV<HIPH_PARSE>;
    $start                                  = now;
    my $xml-entry                           = self.etl-branch(:TAG<entry>, :$xml);
    my $xml-content                         = self.etl-branch(:TAG<content>, :xml($xml-entry));
    my $xml-ManagementConsole               = self.etl-branch(:TAG<ManagementConsole:ManagementConsole>, :xml($xml-content));
    my $xml-AuthorizedKeysValue             = self.etl-branch(:TAG<AuthorizedKeysValue>, :xml($xml-ManagementConsole));
    my $xml-IFixDetails                     = self.etl-branch(:TAG<IFixDetails>, :xml($xml-ManagementConsole));
    my $xml-MachineTypeModelAndSerialNumber = self.etl-branch(:TAG<MachineTypeModelAndSerialNumber>, :xml($xml-ManagementConsole));
    my $xml-ManagedSystems                  = self.etl-branch(:TAG<ManagedSystems>, :xml($xml-ManagementConsole));
    my $xml-MemConfiguration                = self.etl-branch(:TAG<MemConfiguration>, :xml($xml-ManagementConsole));
    my $xml-NetworkInterfaces               = self.etl-branch(:TAG<NetworkInterfaces>, :xml($xml-ManagementConsole));
    my $xml-ProcConfiguration               = self.etl-branch(:TAG<ProcConfiguration>, :xml($xml-ManagementConsole));
    my $xml-VersionInfo                     = self.etl-branch(:TAG<VersionInfo>, :xml($xml-ManagementConsole));
    @!AuthorizedKeysValue                   = self.etl-texts(:TAG<AuthorizedKey>, :xml($xml-AuthorizedKeysValue));
    $!BaseVersion                           = self.etl-text(:TAG<BaseVersion>, :xml($xml-ManagementConsole));
    $!BIOS                                  = self.etl-text(:TAG<BIOS>, :xml($xml-ManagementConsole));
    for self.etl-branches(:TAG<IFixDetail>, :xml($xml-IFixDetails)) -> $xml-IFixDetail {
        @.IFixDetails.push: self.etl-text(:TAG<IFix>, :xml($xml-IFixDetail));
    }
    $!id                                    = self.etl-text(:TAG<id>, :xml($xml-entry));
    $!MachineTypeModelAndSerialNumber       = Hypervisor::IBM::POWER::HMC::ManagementConsole::MachineTypeModelAndSerialNumber.new(:xml($xml-MachineTypeModelAndSerialNumber), :$!config);
    @!ManagedSystems                        = self.etl-links-URIs(:xml($xml-ManagedSystems));
    $!ManagementConsoleName                 = self.etl-text(:TAG<ManagementConsoleName>, :xml($xml-ManagementConsole));
    $!MemConfiguration                      = Hypervisor::IBM::POWER::HMC::ManagementConsole::MemConfiguration.new(:xml($xml-MemConfiguration), :$!config);
    $!NetworkInterfaces                     = Hypervisor::IBM::POWER::HMC::ManagementConsole::NetworkInterfaces.new(:xml($xml-NetworkInterfaces), :$!config);
    $!ProcConfiguration                     = Hypervisor::IBM::POWER::HMC::ManagementConsole::ProcConfiguration.new(:xml($xml-ProcConfiguration), :$!config);
    $!PublicSSHKeyValue                     = self.etl-text(:TAG<PublicSSHKeyValue>, :xml($xml-ManagementConsole));
    $!VersionInfo                           = Hypervisor::IBM::POWER::HMC::ManagementConsole::VersionInfo.new(:xml($xml-VersionInfo), :$!config);
    self.config.diag: sprintf("%-20s %10s: %11s", self.^name.subst(/^.+'::'(.+)$/, {$0}), 'LOAD', sprintf("%.3f", now - $start)) if %*ENV<HIPH_LOAD>;
    if self.config.analyze {
        self.analysis;
        self.config.analysis-commit;
    }
    self;
}

method Managed-System-Ids () {
    my @managed-system-ids;
    for self.ManagedSystems -> $ms-url {
        @managed-system-ids.push: $ms-url.segments[6];
    }
    return @managed-system-ids;
}

=finish
